TO BUILD IMAGE:

docker build -f Dockerfile.dev -t reactfrontend:dev .


TO SPIN UP CONTAINER:

docker run -it --rm -v ${PWD}:/app -v /app/node_modules -p 3001:3000 -e CHOKIDAR_USEPOLLING=true reactfrontend:dev

$ docker run \                                    # Creates and runs new container
    -it \                                           # Starts container in interactive mode (otherwise container will exit with latest react version)
    --rm \                                          # Removes contaner and volumes after app exits
    -v ${PWD}:/react_front_end \                    # Mounts the code into the container at "/app"
    -v /react_front_end/node_modules \              # Configures a volume
    -p 3001:3000 \                                  # Exposes port 3000 to other containers on the same network and port 3001 to the host 
    -e CHOKIDAR_USEPOLLING=true \                   # Enables a polling mechanism so that hot-reloading will work
    reactfrontend:dev                                      # Specify container image to run



docker run --name pcfrontend -p 3000:80 pokerappfrontend:dev  



ON REACT
----------------------------




docker build -f Dockerfile.dev -t pokerappfrontend:dev .


docker run -p 80:80 pokerappfrontend:dev


To create production build:
------------------------------------

docker build -f Dockerfile.dev -t pokerappfrontend:prod

docker run -p 80:80 pokerappfrontend:prod



-------------------

// Js functions with fluent syntax which apply response page layouts to build WebPages
// Page()


Content = {
    "ButtonMenu" = [Welcome, About, Login]
    "Header" = "Poker Champ!"
    "Button" = "Register"
}





Storing pssswords securely
-----------------------
-- password storage
-- salt passwords, protect timing attacks, etc. 
    - https://auth0.com/blog/adding-salt-to-hashing-a-better-way-to-store-passwords/
    - https://www.meziantou.net/how-to-store-a-password-in-a-web-application.htm


-- Use MongoDb atlas? (Free up to 5 gb)
    - https://medium.com/swlh/creating-connecting-a-mongodb-database-and-node-js-server-to-a-front-end-6a53d400ae6a
    - https://medium.com/swlh/securing-your-database-e22b1210d046






Adding SSL Certificate to PAge:
-------------------------
- https://blog.hubspot.com/marketing/what-is-ssl
- "Let's Encrypt offers certificates at no cost, but I would strongly recommend that you have someone knowledgeable about the DNS and technical setup of your website to help."
    - https://letsencrypt.org/





Misc App Config Notes

/*
{
  "nav": {
      "menu_label": "â˜°",
      "routes": [
          {
              "link": "/",  
              "menu_text": "welcome",
              "component": "Welcome"
          },
          {
              "link": "/game",
              "menu_text": "play",
              "component": "GamePage"      
          },
          {
              "link": "/register",   
              "menu_text": "register",
              "component": "Register"       
          },
          {
              "link": "/login",
              "menu_text": "login",       
              "component": "Login"        
          }
      ]
  },
  "base": {
      // HMC: header menu content
      "layout": "responsive-grid-HMC", 
      "areas": { 
        // All of these must be defined in each route component
          "header": "title",
          "menu": "nav",
          "content": "content"
      }
  }


}

*/

// Write the following components

// Route components (page components)
// In these components users specify all named content
// All components extend base
//  Welcome
//  Game
//  Register
//  Login
// 
//  title
// 
//  Boilerplate components (std workflow is user specifies some)
//  nav

